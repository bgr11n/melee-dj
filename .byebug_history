continue
@playlist = @dj.party.playlist
@dj = User.find_by(nickname: params[:nickname])
User.first.party
@dj.party
@playlist = @dj.party.playlist
@dj = User.includes(:party).find_by(nickname: params[:nickname])
@dj
continue
include VideoSerializer
continue
include ::Youtube::VideoSerializer
continue
include VideoSerializer
include Youtube::VideoSerializer
include ::Youtube::VideoSerializer
include HTTParty
continue
require 'youtube/serializers/video_serializer'
continue
require "#{Rails.root}/lib/youtube/serializers/video_serializer.rb"
File.file?('youtube/serializers/video_serializer.rb')
File.exist?('youtube/serializers/video_serializer.rb')
require "#{Rails.root}/lib/youtube/serializers/video_serializer"
File.file?("#{Rails.root}/lib/youtube/serializers/video_serializer.rb")
"#{Rails.root}/lib/youtube/serializers/video_serializer"
File.file?("#{Rails.root}/lib/youtube/serializers/video_serializer")
File.file?('youtube/serializers/video_serializer')
File.exist?('youtube/serializers/video_serializer')
require 'video_serializer'
require 'youtube/serializers/video_serializer'
Youtube::VideoSerializer
continue
@res['items'][0]['contentDetails']['duration']
C@res['items'][0]['contentDetails']['duration']
continue
@res['items'][0]['contentDetails']['duration']
continue
@res.request
@res['items'][0]['contentDetails']['duration']
continue
@res.request
@res.parsed_response
@res
 default_args.merge({id: "uri"})
continue
 default_args.merge({id: "uri"})
continue
default_args.merge({id: "uri"})
default_args.merge({id: uri})
@res.parsed_response
@res
continue
params[:song]
params
